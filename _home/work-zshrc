export ZSH="${HOME}/.nix-profile/share/oh-my-zsh"

ZSH_THEME="nequissimus"
ZSH_CUSTOM="${HOME}/dev/ext/nequi-zsh"

CASE_SENSITIVE="false"
HIST_STAMPS="dd.mm.yyyy"
plugins=(docker git github gitignore kubectl ruby sbt scala)

export TERMINAL="urxvt"
export JAVA_HOME="${$(readlink -e $(type -p java))%*/bin/java}"

export GOOGLE_APPLICATION_CREDENTIALS="${HOME}/Documents/service_account.json"
export CLOUDSDK_CONTAINER_USE_APPLICATION_DEFAULT_CREDENTIALS=true

[[ -e ${ZSH}/oh-my-zsh.sh ]] && source ${ZSH}/oh-my-zsh.sh

alias diff='diff --color'
alias mvn='mvn -q'
alias nano='nano -E -w -c'
alias volume='awk -F"[][]" "/dB/ { print $2 }" <(amixer sget Master)'
alias volume_up='amixer -q sset Master 5%+; volume'
alias volume_down='amixer -q sset Master 5%-; volume'
alias sbt='sbt -mem 4096'
alias docker_clean='docker kill $(docker ps -q); docker rm $(docker ps -a -q)'
alias docker_clean_dangling='docker images -qf dangling=true | xargs -r docker rmi'
alias docker_clean_images='docker kill $(docker ps -q); docker rm $(docker ps -a -q); docker rmi -f $(docker images -q)'
alias rsync='rsync -azvvP'
alias scrot='scrot -s'
alias vpn='sudo openconnect --user=tsteinbach --authgroup=RSA cmbvpn.esentire.com --mtu 1492'
alias git='hub'

alias nix-repair-store='nix-store --verify --check-contents --repair'
alias fix_screens='xrandr --output DP2-3 --crtc 1 --auto --pos 0x0 --output DP2-2 --crtc 2 --primary --auto --pos 1920x0 --output eDP1 --auto --pos 3840x0'

alias coala_ruby='docker run -v=$(pwd):/app --workdir=/app coala/base coala --ci --files lib/*/*.rb --bears RuboCopBear -I'
alias coala_scala='docker run -v=$(pwd):/app --workdir=/app coala/base coala --ci --files src/main/**/*.scala --bears ScalaLintBear -I'

function vpn_route() { sudo route add -net 10.203.0.0 netmask 255.255.0.0 dev tun0; sudo route add -net 10.1.0.0 netmask 255.255.0.0 dev tun0 }

function gerrit_hook() { gitdir=$(git rev-parse --git-dir); scp -p -P 29418 tsteinbach@gerrit.internal:hooks/commit-msg ${gitdir}/hooks/; git commit --amend --no-edit }
function nix-update() { echo "Updating user environment... "; nix-channel --update; nix-env -u '*'; nix-env -i $(nix-env -q | grep -v 'emacs'); }
function docker_retag() { docker pull $1 && docker tag $1 $2 && docker push $2 }

function docker_kazoo() { docker run --rm --name kazoo --link zookeeper:zookeeper -v $(pwd)/$1:/config.json "registry.internal/soa/kazoo:0.0.1" }
function docker_elastic() { docker kill elasticsearch; docker rm elasticsearch; docker run -d --name elasticsearch -p 9200:9200 -e "http.host=0.0.0.0" -e "transport.host=127.0.0.1" docker.elastic.co/elasticsearch/elasticsearch:5.4.2 }
function docker_redis() { docker kill redis; docker rm redis; docker run -d --name redis -p 6379:6379 registry.internal/common/redis:3.0.7 }
function docker_mongo() { docker kill mongo; docker rm mongo; docker run -d --name mongo registry.internal/common/mongo mongod --nojournal --smallfiles }
function docker_rabbit() { docker kill rabbit; docker rm rabbit; docker run -d -e RABBITMQ_NODENAME=rabbitmq --name rabbit registry.internal/common/rabbitmq }

alias docker_zk='docker kill zookeeper; docker rm zookeeper; docker run -d -p 2181:2181 --name zookeeper zookeeper:3.4.10'
function docker_kafka() { docker kill kafka; docker rm kafka; docker run -h $(hostname) -d -p 9092:9092 --name kafka --link zookeeper:zookeeper -e KAFKA_ZOOKEEPER_CONNECT="zookeeper:2181" -e KAFKA_ADVERTISED_LISTENERS="PLAINTEXT://$(hostname):9092" -e KAFKA_CREATE_TOPICS="topic1:1:1,topic2:1:1" wurstmeister/kafka:0.10.2.1 }
function kafka_consume() { docker run -it --link kafka:kafka --entrypoint /bin/sh wurstmeister/kafka:0.10.2.1 -c "/opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic $1" }
function kafka_produce() { docker run -it --link kafka:kafka --entrypoint /bin/sh wurstmeister/kafka:0.10.2.1 -c "/opt/kafka/bin/kafka-console-producer.sh --broker-list kafka:9092 --topic $1" }

function docker_inspect() { (skopeo inspect docker://"$1" || docker inspect "$1") | jq }

unsetopt correct_all
