export ZSH="${HOME}/.nix-profile/share/oh-my-zsh"

ZSH_THEME="avit"
CASE_SENSITIVE="false"
ENABLE_CORRECTION="true"
HIST_STAMPS="dd.mm.yyyy"
plugins=(git)

export TERMINAL="xterm"
export JAVA_HOME="${$(readlink -e $(type -p java))%*/bin/java}"
export ANYCONNECT="/opt/cisco/anyconnect/bin"
export PATH="${PATH}:${ANYCONNECT}:/home/tsteinbach/bin:/var/setuid-wrappers:/home/tsteinbach/.nix-profile/bin:/home/tsteinbach/.nix-profile/sbin:/nix/var/nix/profiles/default/bin:/nix/var/nix/profiles/default/sbin:/run/current-system/sw/bin:/run/current-system/sw/sbin:/home/tsteinbach/bin:/home/tsteinbach/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin"

[[ -e ${ZSH}/oh-my-zsh.sh ]] && source ${ZSH}/oh-my-zsh.sh

alias mvn='mvn -q'
alias nano='nano -E -w -c'
alias volume='awk -F"[][]" "/dB/ { print $2 }" <(amixer sget Master)'
alias volume_up='amixer -q sset Master 5%+; volume'
alias volume_down='amixer -q sset Master 5%-; volume'
alias sbt='sbt -mem 4096'
alias docker_clean='docker kill $(docker ps -q); docker rm $(docker ps -a -q)'
alias docker_clean_dangling='docker images -qf dangling=true | xargs -r docker rmi'
alias docker_clean_images='docker kill $(docker ps -q); docker rm $(docker ps -a -q); docker rmi -f $(docker images -q)'
alias rsync='rsync -azvvP'
alias pdf='evince'
alias vpn='sudo openconnect --no-cert-check --user=tsteinbach --authgroup=RSA cmbvpn.esentire.com --mtu 1492'

alias fix_touchpad='sudo modprobe -r elan_i2c && sleep 5 && sudo modprobe elan_i2c' # ASUS UX305C
alias nix-repair-store='nix-store --verify --check-contents --repair'
alias fix_screens='xrandr --output DP2-3 --crtc 1 --auto --pos 0x0 --output DP2-2 --crtc 2 --primary --auto --pos 1920x0 --output eDP1 --auto --pos 3840x0'

function fix_dns() { while true; do sudo su - -c 'grep "8.8.8.8" /etc/resolv.conf > /dev/null || echo "nameserver 8.8.8.8" >> /etc/resolv.conf'; sleep 5; done }
function nix-search() { echo "Searching..."; nix-env -qaP --description '*' | grep -i "$1"; }
function nix-update() { echo "Updating user environment... "; nix-channel --update; nix-env -i $(nix-env -q | grep -v 'user-misc' | grep -v 'nix-'); }

function gerrit_hook() { gitdir=$(git rev-parse --git-dir); scp -p -P 29418 tsteinbach@gerrit.internal:hooks/commit-msg ${gitdir}/hooks/; git commit --amend --no-edit }

export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting

[[ -s "${HOME}/.rvm/scripts/rvm" ]] && source "${HOME}/.rvm/scripts/rvm"
if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then . $HOME/.nix-profile/etc/profile.d/nix.sh; fi

function docker_retag() { docker pull $1 && docker tag $1 $2 && docker push $2 }
function docker_zk() { docker kill zookeeper; docker rm zookeeper; docker run -d -p 2181:2181 --name zookeeper registry.internal/common/zookeeper-base:3.4.6 }
function docker_kafka() { docker kill kafka; docker rm kafka; docker run -d -p9092:9092 --name kafka --link zookeeper:zookeeper -e KAFKA_ADVERTISED_PORT="9092" -e KAFKA_ZOOKEEPER_CONNECT="zookeeper:2181" "registry.internal/cds/kafka:1.1" }
function docker_kazoo() { docker run --rm --name kazoo --link zookeeper:zookeeper -v $(pwd)/$1:/config.json "registry.internal/soa/kazoo:0.0.1" }
function kafka_consume() { docker run -it --link kafka:kafka --entrypoint /bin/sh registry.internal/cds/kafka:latest -c "/opt/kafka_2.11-0.10.1.0/bin/kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic $1" }
function kafka_produce() { docker run -it --link kafka:kafka --entrypoint /bin/sh registry.internal/cds/kafka:latest -c "/opt/kafka_2.11-0.10.1.0/bin/kafka-console-producer.sh --broker-list kafka:9092 --topic $1" }

source <(kubectl completion zsh)
